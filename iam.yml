AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Define IAM Roles utilized to build, deploy, and operate the Javabuilder service.
  Note: CAPABILITY_IAM capability is required to deploy this stack.

Parameters:
  ArtifactBucket:
    Type: String
    Description: Name of existing S3 bucket for storing pipeline artifacts
  TemplateBucket:
    Type: String
    Description: Name of existing S3 bucket for storing CloudFormation template artifacts

Resources:
  # TODO: Split this into separate roles:
  # 1) Permissions for the long-running Lambda that compiles/runs student projects
  # 2) Permissions for the synchronous Lambda that invokes the long-running Lambda and then relays web messages to it.
  # 3) Permissions for the Lambda Authorizer
  # 4) Permissions for CodePipeline Slack approval Lambda.
  JavabuilderLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal: {Service: [lambda.amazonaws.com]}
      Path: /
      Policies:
        - PolicyName: JavabuilderLambdaExecutionPolicy
          PolicyDocument:
            Statement:
              # CodePipeline Slack Approval Lambda
              - Effect: Allow
                Action:
                  - "codepipeline:GetPipelineState"
                  - "codepipeline:GetPipelineExecution"
                  - "codepipeline:PutApprovalResult"
                  - "cloudformation:DescribeStacks"
                Resource: '*'

              # All Lambdas need logging permissions.
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: 'arn:aws:logs:::log-group:/aws/lambda/javabuilder*'
              - Effect: Allow
                Action:
                  - "xray:PutTraceSegments"
                  - "xray:PutTelemetryRecords"
                Resource: '*'
      ManagedPolicyArns:
        # Authorizer
        # Currently doesn't require any permissions beyond logging.

        # Invoke and relay messages to Project Lambda.
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaRole"
        - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"

        # Compile and Run Project Lambda.
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole"
        - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
  JavabuilderCloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal: {Service: [cloudformation.amazonaws.com]}
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: ManageResourcesAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "apigateway:*"
                  - "lambda:*"
                  - "cloudformation:*"
                  - "route53:*"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                Resource:
                  - !Sub "arn:aws:s3:::${TemplateBucket}/*"
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource:
                  - !GetAtt JavabuilderLambdaExecutionRole.Arn
  JavabuilderCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal: {Service: [codebuild.amazonaws.com]}
        Version: '2012-10-17'
      Path: /service-role/
      Policies:
        - PolicyName: CodeBuildResourcesAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
              - Effect: Allow
                Action:
                  - "s3:*"
                Resource:
                  - !Sub "arn:aws:s3:::${ArtifactBucket}/*"
                  - !Sub "arn:aws:s3:::${ArtifactBucket}"
                  - !Sub "arn:aws:s3:::${TemplateBucket}/*"
                  - !Sub "arn:aws:s3:::${TemplateBucket}"
              - Effect: Allow
                Action:
                  - "cloudformation:DescribeStacks"
                Resource: '*'
Outputs:
  JavabuilderLambdaExecutionRole:
    Description: Javabuilder Lambda Execution Role ARN
    Value: !GetAtt JavabuilderLambdaExecutionRole.Arn
    Export: {Name: JavabuilderLambdaExecutionRole}
  JavabuilderCloudFormationRole:
    Description: Javabuilder CloudFormation Role ARN
    Value: !GetAtt JavabuilderCloudFormationRole.Arn
    Export: {Name: JavabuilderCloudFormationRole}
  JavabuilderCodeBuildRole:
    Description: Javabuilder CodeBuild Role ARN
    Value: !GetAtt JavabuilderCodeBuildRole.Arn
    Export: {Name: JavabuilderCodeBuildRole}