/*
 * Usage:
 * ./gradlew goJF -> runs the linter and fixes files
 * ./gradlew verGJF -> just runs the linter
 * ./gradlew buildZip -> builds a zip package that is compatible with AWS Lambda
 * ./gradlew appRun -> runs the WebSocket server for local development
 * ./gradlew test -> runs the unit tests
 */

plugins {
    id "org.gretty" version "3.0.4"
    id 'application'
    id 'com.github.sherter.google-java-format' version '0.8'
    id 'java'
}

repositories {
    jcenter()
}

dependencies {
    // https://mvnrepository.com/artifact/com.amazonaws/aws-lambda-java-core
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.1'
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-apigatewaymanagementapi
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-apigatewaymanagementapi', version: '1.11.978'
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-sqs
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-sqs', version: '1.11.978'
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.20'
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20210307'
    // jaxb-api is needed to get rid of warning on run
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation project(':protocol')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.9.0'
    testImplementation(testFixtures(project(':protocol')))
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    // https://mvnrepository.com/artifact/javax.websocket/javax.websocket-api
    compileOnly group: 'javax.websocket', name: 'javax.websocket-api', version: '1.1'
    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

gretty {
    servletContainer = 'tomcat9'
    contextPath = '/'
}

task buildZip(type: Zip) {
    from project(':neighborhood').getTasksByName('buildNeighborhood', false)
    from project(':theater').getTasksByName('buildTheater', false)
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-commit')
    into { new File(rootProject.rootDir, '../.git/hooks') }
    fileMode 0777
}

build.dependsOn buildZip
build.dependsOn installGitHook

afterEvaluate {
    tasks.prepareInplaceWebAppFolder.dependsOn project(':neighborhood').getTasksByName('buildNeighborhood', false)
    tasks.prepareInplaceWebAppFolder.dependsOn project(':theater').getTasksByName('buildTheater', false)
    // This ensures updates to the githook will be installed
    tasks.prepareInplaceWebAppFolder.dependsOn installGitHook
}
