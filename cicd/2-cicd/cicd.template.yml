AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Javabulder Continuous Integration pipeline

Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub repository owner
    Default: code-dot-org
  GitHubRepo:
    Type: String
    Description: GitHub repository name
    Default: javabuilder
  GitHubBranch:
    Type: String
    Description: The branch that these resources test and deploy. Not necessarily `main`.
    Default: main
  GitHubBadgeEnabled:
    Type: String
    Description: Whether to report back to github the status of build projects
    Default: true
    AllowedValues: [true, false]

Resources:

  # The Elastic Container Registry Repository will store our built docker
  # images, for example, the load-test docker image.
  EcrRepository:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Sub javabuilder-${GitHubBranch}
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: AllowDeveloperPushPull
            Effect: Allow
            Principal: 
              AWS: 
                - !ImportValue JavabuilderCodeBuildRoleArn
                - "arn:aws:iam::475661607190:role/admin/Developer"
            Action: 
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"

  # The CodeBuild Project is triggered by pull requests targeting $GitHubBranch
  # It will perform any steps defined in the pr-buildspec.yml file.
  PullRequestBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-${GitHubBranch}-pr-build
      ServiceRole: !ImportValue JavabuilderCodeBuildRoleArn
      BadgeEnabled: !Ref GitHubBadgeEnabled
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ARTIFACT_STORE
            Value: !ImportValue JavabuilderCodeBuildArtifactBucket
          - Name: ECR_REPOSITORY
            Value: !GetAtt EcrRepository.RepositoryUri
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_CUSTOM_CACHE
          - LOCAL_DOCKER_LAYER_CACHE
      Source:
        Type: GITHUB
        Location: !Sub https://github.com/${GitHubOwner}/${GitHubRepo}.git
        BuildSpec: cicd/3-app/pr-buildspec.yml
        ReportBuildStatus: true
      SourceVersion: !Ref GitHubBranch
      Artifacts:
        # We're uplading artifacts manually, to organize by branch.
        Type: NO_ARTIFACTS
      Triggers:
        Webhook: true
        FilterGroups:
          - - Pattern: !Sub ^refs/heads/${GitHubBranch}$
              Type: BASE_REF
            - Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED,PULL_REQUEST_REOPENED
              Type: EVENT
  
  # The CodeBuild Project is used in the CodePipeline pipeline to prepare for a release.
  # It will perform any steps defined in the referenced buildspec.yml file.
  LoadTestBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-load-test-build
      ServiceRole: !ImportValue JavabuilderCodeBuildRoleArn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ARTIFACT_STORE
            Value: !ImportValue JavabuilderCodeBuildArtifactBucket
          - Name: ECR_REPOSITORY
            Value: !GetAtt EcrRepository.RepositoryUri
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/3-app/load-test/load-test.buildspec.yml
      Artifacts:
        Type: CODEPIPELINE
  
  # The CodeBuild Project is used in the CodePipeline pipeline to prepare for a release.
  # It will perform any steps defined in the referenced buildspec.yml file.
  AppBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-load-test-build
      ServiceRole: !ImportValue JavabuilderCodeBuildRoleArn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ARTIFACT_STORE
            Value: !ImportValue JavabuilderCodeBuildArtifactBucket
          - Name: ECR_REPOSITORY
            Value: !GetAtt EcrRepository.RepositoryUri
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/3-app/buildspec.yml
      Artifacts:
        Type: CODEPIPELINE

  # Grant the Javabuilder CodeBuild Role additional permissions for resources in
  # this template. This allows us to avoid granting permission to * resources.
  JavabuilderRolePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: root
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - codebuild:*
            Resource:
              - !GetAtt PipelineBuildProject.Arn
          - Effect: Allow
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverage
            Resource:
              - !Sub arn:aws:codebuild:us-east-1:165336972514:report-group/${AWS::StackName}-${GitHubBranch}-pr-build
      Roles:
        - !ImportValue JavabuilderCodeBuildRoleName

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: !Ref AWS::StackName
      RoleArn: !ImportValue JavabuilderCodeBuildRoleArn
      RestartExecutionOnUpdate: true
      ArtifactStore: 
        Type: S3 
        Location: !ImportValue JavabuilderCodeBuildArtifactBucket
      Stages: 
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Provider: CodeStarSourceConnection
                Owner: AWS
                Version: 1
              OutputArtifacts:
                - Name: sourceCode
              Configuration:
                ConnectionArn: arn:aws:codestar-connections:us-east-1:165336972514:connection/40d49145-7aeb-412e-a46d-a5a6cab79662
                FullRepositoryId: !Sub ${GitHubOwner}/${GitHubRepo}
                BranchName: create-codepipeline
                # OAuthToken: '{{resolve:secrets-manager:DeployCodeOrg-GitHub-OAuthToken}}'
        - Name: Build
          Actions:
            - Name: Load Test Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: sourceCode
              Configuration:
                ProjectName: !Ref LoadTestBuildProject
              OutputArtifacts:
                - Name: loadTestBuildResults
            - Name: App Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: sourceCode
              Configuration:
                ProjectName: !Ref AppBuildProject
              OutputArtifacts:
                - Name: appBuildResults
        # - Name: Deploy Test
        #   Actions:
        #     - Name: Deploy Load Test

