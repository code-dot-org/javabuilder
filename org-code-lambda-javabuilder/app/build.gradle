/*
 * Usage:
 * ./gradlew build -> builds the project
 * ./gradlew bootRun -> sets up a local server -> can be accessed at localhost:8080
 * ./gradlew goJF -> runs the linter and fixes files
 * ./gradlew verGJF -> just runs the linter
 * ./gradlew buildDocker -> builds the docker container
 *
 * To publish that docker container, do the following
 * ./gradlew build
 * ./gradlew buildDocker
 * docker tag <id> jmkulwik/test-fargate-websocket:<tag>
 * docker push jmkulwik/test-fargate-websocket:<tag>
 * TODO: Update these instructions to use the code.org docker hub account
 */

plugins {
  id 'com.github.sherter.google-java-format' version '0.8'
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'org.code'
version = '0.0.1'
sourceCompatibility = '1.8'

bootJar {
  baseName = 'org.code.lambda.javabuilder'
}

repositories {
  mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
  useJUnitPlatform()
}

task installGitHook(type: Copy) {
  from new File(rootProject.rootDir, 'scripts/pre-commit')
  into { new File(rootProject.rootDir, '../.git/hooks') }
  fileMode 0777
}

def copyDocker = tasks.register('copyDocker', Copy) {
  dependsOn build
  from "$buildDir/libs"
  into "$rootDir/dockerContainer"
}

def buildDocker = tasks.register('buildDocker', Exec) {
  dependsOn copyDocker
  executable "docker"
  args "build", "$rootDir/dockerContainer"
}
