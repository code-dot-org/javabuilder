require 'aws-sdk-lambda'
require 'jwt'
require_relative 'jwt_helper'
include JwtHelper

# The lambda handler takes an event with the query string parameter 'Authorization=token',
# where the token is a JWT token generated by dashboard or a string indicating this is
# a basic connection test from a user. It checks the validity of the token and returns
# a policy that either allows or disallows the user from continuing to Javabuilder. This
# authorizer is specialized to work with AWS API Gateway WebSocket APIs.
def lambda_handler(event:, context:)
  origin = event['headers']['Origin']
  jwt_token = event['queryStringParameters']['Authorization']
  method_arn = event['methodArn']
  # Return early if this is the user connectivity test
  if jwt_token == 'connectivityTest'
    return JwtHelper.generate_policy('connectivityTest', "Allow", method_arn, {connectivityTest: true})
  end

  decoded_token = JwtHelper.decode_token(jwt_token, origin)
  return JwtHelper.generate_deny(method_arn) unless decoded_token
  return JwtHelper.generate_allow(method_arn, decoded_token)
end
